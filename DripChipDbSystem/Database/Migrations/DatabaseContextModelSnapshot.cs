// <auto-generated />
using System;
using DripChipDbSystem.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DripChipDbSystem.Database.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DripChipDbSystem.Database.Models.Animals.Animal", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("ChipperId")
                        .HasColumnType("integer")
                        .HasColumnName("chipper_id");

                    b.Property<DateTime>("ChippingDateTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("chipping_date_time");

                    b.Property<long>("ChippingLocationPointId")
                        .HasColumnType("bigint")
                        .HasColumnName("chipping_location_point_id");

                    b.Property<DateTime?>("DeathDateTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("death_date_time");

                    b.Property<int>("Gender")
                        .HasColumnType("integer")
                        .HasColumnName("gender");

                    b.Property<float>("Height")
                        .HasColumnType("real")
                        .HasColumnName("height");

                    b.Property<float>("Length")
                        .HasColumnType("real")
                        .HasColumnName("length");

                    b.Property<int>("LifeStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("life_status");

                    b.Property<float>("Weight")
                        .HasColumnType("real")
                        .HasColumnName("weight");

                    b.HasKey("Id");

                    b.HasIndex("ChipperId");

                    b.HasIndex("ChippingLocationPointId");

                    b.ToTable("animal", (string)null);
                });

            modelBuilder.Entity("DripChipDbSystem.Database.Models.Animals.AnimalType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("AnimalId")
                        .HasColumnType("bigint")
                        .HasColumnName("animal_id");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.HasIndex("AnimalId");

                    b.ToTable("animal_type", (string)null);
                });

            modelBuilder.Entity("DripChipDbSystem.Database.Models.Animals.AnimalVisitedLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<long>("AnimalId")
                        .HasColumnType("bigint")
                        .HasColumnName("animal_id");

                    b.Property<long>("LocationPointId")
                        .HasColumnType("bigint")
                        .HasColumnName("location_point_id");

                    b.Property<DateTime>("VisitedDateTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("visited_date_time");

                    b.HasKey("Id");

                    b.HasIndex("AnimalId");

                    b.HasIndex("LocationPointId");

                    b.ToTable("animal_visited_location", (string)null);
                });

            modelBuilder.Entity("DripChipDbSystem.Database.Models.Animals.LocationPoint", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<double>("Latitude")
                        .HasColumnType("double precision")
                        .HasColumnName("latitude");

                    b.Property<double>("Longitude")
                        .HasColumnType("double precision")
                        .HasColumnName("longitude");

                    b.HasKey("Id");

                    b.ToTable("location_point", null, t =>
                        {
                            t.HasCheckConstraint("CK_Latitude", "Latitude >= -90 AND Latitude <= 90");

                            t.HasCheckConstraint("CK_Longitude", "Latitude >= -180 AND Latitude <= 180");
                        });
                });

            modelBuilder.Entity("DripChipDbSystem.Database.Models.Auth.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("last_name");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password_hash");

                    b.HasKey("Id");

                    b.ToTable("account", (string)null);
                });

            modelBuilder.Entity("DripChipDbSystem.Database.Models.Animals.Animal", b =>
                {
                    b.HasOne("DripChipDbSystem.Database.Models.Auth.Account", "Chipper")
                        .WithMany()
                        .HasForeignKey("ChipperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DripChipDbSystem.Database.Models.Animals.LocationPoint", "ChippingLocationPoint")
                        .WithMany()
                        .HasForeignKey("ChippingLocationPointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chipper");

                    b.Navigation("ChippingLocationPoint");
                });

            modelBuilder.Entity("DripChipDbSystem.Database.Models.Animals.AnimalType", b =>
                {
                    b.HasOne("DripChipDbSystem.Database.Models.Animals.Animal", null)
                        .WithMany("AnimalType")
                        .HasForeignKey("AnimalId");
                });

            modelBuilder.Entity("DripChipDbSystem.Database.Models.Animals.AnimalVisitedLocation", b =>
                {
                    b.HasOne("DripChipDbSystem.Database.Models.Animals.Animal", "Animal")
                        .WithMany("VisitedLocations")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DripChipDbSystem.Database.Models.Animals.LocationPoint", "LocationPoint")
                        .WithMany()
                        .HasForeignKey("LocationPointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");

                    b.Navigation("LocationPoint");
                });

            modelBuilder.Entity("DripChipDbSystem.Database.Models.Animals.Animal", b =>
                {
                    b.Navigation("AnimalType");

                    b.Navigation("VisitedLocations");
                });
#pragma warning restore 612, 618
        }
    }
}
